pub fn build_proverb(list: Vec<&str>) -> String {    let mut lines = vec![];    if list.len() > 2 {        for i in 0..list.len() {            if let Some(second) = list.get(i + 1) {                lines.push(format!(                    "For want of a {first} the {second} was lost.",                    first = list.get(i).expect("Unexpected input list size!"),                    second = second                ))            }        }        lines.push(format!(            "And all for the want of a {third}{second} {first}.",            first = list.get(0).expect("Unexpected input list size!"),            second = list.get(1).expect("Unexpected input list size!"),            third = list.get(2).expect("Unexpected input list size!")        ))    } else {        if let Some(first) = list.get(0) {            lines.push(format!("And all for the want of a {a}.", a = first));            if let Some(second) = list.get(1) {                lines.push(format!("For want of a {a} the {b} was lost.", a = first, b = second));            }        }        lines.reverse();    }    return lines.join("\n");}